name: Tests

on:
  push:
    branches: [main, session, develop]
  pull_request:
    branches: [main, session, develop]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.12"]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install dependencies
        run: |
          uv sync --all-groups

      - name: Run tests
        run: |
          uv run pytest -v --tb=short

      - name: Run type checking (mypy)
        run: |
          uv run mypy src/pysmith/

      - name: Run linter (ruff check)
        run: |
          uv run ruff check src/ tests/ examples/

  lint:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install dependencies
        run: |
          uv sync --all-groups

      - name: Run ruff format check
        run: |
          uv run ruff format --check src/ tests/ examples/

      - name: Run ruff linting
        run: |
          uv run ruff check src/ tests/ examples/

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install dependencies
        run: |
          uv sync --all-groups

      - name: Run tests with coverage
        run: |
          uv run pytest --cov=src/pysmith --cov-report=term-missing --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

